@using TailwindBlazorElectron.Model
@using TailwindBlazorElectron.Services
@using System.Globalization
@using HeroIcons.Blazor.Outline

@inject LibraryService LibraryService

@code {
	User User;
	protected override void OnInitialized()
	{
		var cultureInfo = new CultureInfo("en-US");
		CultureInfo.DefaultThreadCurrentCulture = cultureInfo;

		if (LibraryService.UserState.HasUser())
		{
			User = LibraryService.UserState.CurrentUser;
		}
	}

	void ReadNotification(Notification notification)
	{
		LibraryService.MarkNotificationAsRead(notification);
	}
}

@if (LibraryService.UserState.HasUser())
{
	<div class="inline-grid grid-flow-row gap-4 auto-rows-fr">
		@foreach (Notification notification in User.UnreadNotifications)
		{
			<div class="p-4 space-y-4 bg-white border rounded-lg">
				<div class="flex justify-between">
					<p class="text-sm text-gray-600">@notification.SentAt.ToLongDateString()
						@notification.SentAt.ToLongTimeString()
					</p>
					<XIcon class="w-4 h-4 -mt-1 -mr-1.5 text-gray-500 cursor-pointer"
				@onclick="() => ReadNotification(notification)">
					</XIcon>
				</div>
				<p class="text-md">@notification.Content</p>
			</div>
		}
	</div>
}